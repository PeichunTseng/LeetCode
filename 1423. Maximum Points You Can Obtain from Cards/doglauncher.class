import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Stack;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Map;
import java.util.HashMap;

public class tryyy
{

///////////////////mine////////////////////////
//   public int maxScore(int[] cardPoints, int k){
//      int right=0;
//      int left=0;
//      int res=0;
//      List<Integer> l= new ArrayList<>();
//      List<Integer> r= new ArrayList<>();
//      l.add(0);
//      r.add(0);
//      for(int i=0;i<k;i++){
//          left+=cardPoints[i];
//          l.add(left);
//          right+=cardPoints[cardPoints.length-1-i];
//          r.add(right);
//      }

//      for(int i=0;i<=k;i++){
//          int temp=l.get(i)+r.get(k-i);
//          res=Math.max(res,temp);
//      }
//      return res;
//   }
///////////////////others  better////////////////////////
  public int maxScore(int[] cardPoints, int k){
    int len=cardPoints.length;
    int res=0;
    int start=len-k;
    int tem=0;
    for(int i=start;i<len+k;i++){
        tem+=cardPoints[i%len];
        if(i>=len){
            tem-=cardPoints[(i-k)];
        }
        res=Math.max(res,tem);
    }
    return res;
  }



  public static void main(String[] args) 
  {
    tryyy tr=new tryyy();
    //int[] cardPoints={1,2,3,4,5,6,1}; 
    int[] cardPoints={2,79,80,1,200,1}; //203
    int k=3;
    int ans=tr.maxScore(cardPoints,k);
    System.out.println(ans);
  }

}